services:
  redis:
    image: redis:latest
    container_name: redis
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    restart: on-failure
    ports:
      - "6379:6379"
  mysql:
    image: mysql:latest
    container_name: mysql
    restart: on-failure
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: otus
      MYSQL_USER: otus
      MYSQL_PASSWORD: otus
    volumes:
     - ./sql/master/mysql:/var/lib/mysql
     - ./sql/master/mysql.conf.cnf:/etc/my.cnf

  mysql_slave:
    image: mysql:latest
    container_name: mysql_slave
    depends_on:
      - mysql
    restart: on-failure
    ports:
      - "3307:3306"
    env_file:
      - ./sql/slave/slave.env
    volumes:
      - ./sql/slave/mysql:/var/lib/mysql
      - ./sql/slave/mysql.conf.cnf:/etc/my.cnf


  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: on-failure
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=otus
      - RABBITMQ_DEFAULT_PASS=otus
      - RABBITMQ_DEFAULT_VHOST=otus

#  mysql_slave_1:
#    image: mysql:latest
#    container_name: mysql_slave_1
#    depends_on:
#      - mysql
#    restart: on-failure
#    ports:
#      - "3308:3306"
#    env_file:
#      - ./sql/slave_1/slave_1.env
#    volumes:
#      - ./sql/slave_1/mysql:/var/lib/mysql
#      - ./sql/slave_1/mysql.conf.cnf:/etc/my.cnf
#  script:
#    container_name: script
#    build:
#      context: ../
#      dockerfile: build/Dockerfile_script
#    restart: on-failure
#    depends_on:
#      - mysql
  app_1:
    container_name: app_1
    build:
      context: ../
      dockerfile: build/Dockerfile
    ports:
      - "8084:8081"
    restart: on-failure
    depends_on:
      - rabbitmq
      - mysql
      - redis
      - haproxy

  app_2:
    container_name: app_2
    build:
      context: ../
      dockerfile: build/Dockerfile
    ports:
      - "8083:8081"
    restart: on-failure
    depends_on:
      - rabbitmq
      - mysql
      - redis
      - haproxy

  post-notifier:
      container_name: post-notifier
      build:
          context: ../
          dockerfile: build/Dockerfile_notifier
      ports:
          - "8082:8082"
      restart: on-failure
      depends_on:
          - app_1
#          - app_2
          - mysql
          - redis
          - rabbitmq

  nginx:
    container_name: nginx
    build:
      context: ../
      dockerfile: build/Dockerfile_nginx
    ports:
      - "80:80"
    restart: on-failure
    depends_on:
      - app_1
#      - app_2
      - post-notifier

  haproxy:
    container_name: haproxy
    build:
      context: ../
      dockerfile: build/Dockerfile_haproxy
    ports:
      - "81:81"
    restart: on-failure
    depends_on:
      - mysql
      - mysql_slave

