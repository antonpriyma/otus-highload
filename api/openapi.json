{
  "openapi": "3.0.0",
  "info": {
    "title": "OTUS Highload Architect",
    "version": "1.1.0"
  },
  "paths": {
    "/login": {
      "post": {
        "description": "Упрощенный процесс аутентификации путем передачи идентификатор пользователя и получения токена для дальнейшего прохождения авторизации",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "example": "username"
                  },
                  "password": {
                    "type": "string",
                    "example": "Секретная строка"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Успешная аутентификация",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "example": "e4d2e6b0-cde2-42c5-aac3-0b8316f21e58"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Ошибка аутентификации"
          },
          "404": {
            "description": "Пользователь не найден"
          },
          "500": {
            "$ref": "#/components/responses/5xx"
          }
        }
      }
    },
    "/user/register": {
      "post": {
        "description": "Регистрация нового пользователя",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "example": "логин"
                  },
                  "first_name": {
                    "type": "string",
                    "example": "Имя"
                  },
                  "second_name": {
                    "type": "string",
                    "example": "Фамилия"
                  },
                  "age": {
                    "type": "integer",
                    "example": 18
                  },
                  "biography": {
                    "type": "string",
                    "example": "Хобби, интересы и т.п."
                  },
                  "city": {
                    "type": "string",
                    "example": "Москва"
                  },
                  "password": {
                    "type": "string",
                    "example": "Секретная строка"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Успешная регистрация"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/5xx"
          },
          "503": {
            "$ref": "#/components/responses/5xx"
          }
        }
      }
    },
    "user/search/{username}": {
      "get": {
        "description": "Поиск пользователей по логину",
        "parameters": [
          {
            "name": "username",
            "required": true,
            "in": "path",
            "description": "Логин пользователя"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный поиск пользователей",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/5xx"
          }
        }
      }
    },
    "/post/feed": {
      "get": {
        "description": "Получение списка постов",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Количество постов на странице"
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "Смещение относительно первого поста"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешное получение списка постов",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Post"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/5xx"
          }
        }
      }
    },
    "/user/get/{username}": {
      "get": {
        "description": "Получение анкеты пользователя",
        "parameters": [
          {
            "name": "username",
            "required": true,
            "in": "path",
            "description": "Логин пользователя"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешное получение анкеты пользователя",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/5xx"
          }
        }
      }
    }
  },
  "components": {
    "responses": {
      "400": {
        "description": "Невалидные данные ввода"
      },
      "409": {
        "description": "Сущность уже существует"
      },
      "404": {
        "description": "Сущность не найдена"
      },
      "401": {
        "description": "Неавторизованный доступ"
      },
      "5xx": {
        "description": "Ошибка сервера"
      }
    },
    "schemas": {
      "Post": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": 1,
            "description": "Идентификатор поста"
          },
          "user_id": {
              "type": "string",
              "example": "uuid",
              "description": "uuid"
          },
          "text": {
            "type": "string",
            "example": "Текст поста",
            "description": "Текст поста"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "логин",
            "description": "логин"
          },
          "first_name": {
            "type": "string",
            "example": "Имя",
            "description": "Имя"
          },
          "second_name": {
            "type": "string",
            "example": "Фамилия",
            "description": "Фамилия"
          },
          "age": {
            "type": "integer",
            "example": 18,
            "description": "Возраст"
          },
          "biography": {
            "type": "string",
            "example": "Хобби, интересы и т.п.",
            "description": "Интересы"
          },
          "sex": {
            "type": "integer",
            "enum": [
              0,
              1
            ],
            "example": "Пол",
            "description": "0 - мужской, 1 - женский"
          },
          "city": {
            "type": "string",
            "example": "Москва",
            "description": "Город"
          }
        }
      }
    }
  }
}